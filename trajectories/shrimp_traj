#!/bin/bash

ts="20171209T064706"
z=2

# SENSOR=hd.sensor.bin
# Spacing should be related to scans per second and driving speed
#  The zeb1 scans at 43000 points per second, 270 degrees at a 0.625 degree interval
# So that's 432 points per scan, 1000 scans per second
# So, it should scan 1k times in 2m, so one scan every 2/1000 metres

spacing=0.002
# spacing=0.5
i=0

# echo -en "Generating trajectory..." 
for x in $(seq -30 0.1 -20); do
	q=$(echo "90,0,$i" | math-deg2rad --fields=a,b,c | math-eigen rotation --from=euler --to=quaternion | cut -d, -f4-)
	i=$(expr $i + 3)
	echo "$ts,$x,-1,$z,$q"
done
# echo -en "." 

for x in $(seq -20 $spacing 20); do
	q=$(echo "90,0,$i" | math-deg2rad --fields=a,b,c | math-eigen rotation --from=euler --to=quaternion | cut -d, -f4-)
	i=$(expr $i + 3)
	echo "$ts,$x,-1,$z,$q"
done

# echo -en "." 

for x in $(seq 20 0.1 30); do
	q=$(echo "90,0,$i" | math-deg2rad --fields=a,b,c | math-eigen rotation --from=euler --to=quaternion | cut -d, -f4-)
	i=$(expr $i + 3)
	echo "$ts,$x,-1,$z,$q"
done 

# echo -en "." 

for y in $(seq -1 $spacing 10); do
	q=$(echo "0,0,$i" | math-deg2rad --fields=a,b,c | math-eigen rotation --from=euler --to=quaternion | cut -d, -f4-)
	i=$(expr $i + 3)
	echo "$ts,30,$y,$z,$q"
done 

# echo -en "." 

# echo -en "." 

for x in $(seq 30 -0.1 20); do
	q=$(echo "-90,0,$i" | math-deg2rad --fields=a,b,c | math-eigen rotation --from=euler --to=quaternion | cut -d, -f4-)
	i=$(expr $i + 3)
	echo "$ts,$x,10,$z,$q"
done 

for x in $(seq 20 -$spacing -20); do
	q=$(echo "-90,0,$i" | math-deg2rad --fields=a,b,c | math-eigen rotation --from=euler --to=quaternion | cut -d, -f4-)
	i=$(expr $i + 3)
	echo "$ts,$x,10,$z,$q"
done 
# echo -en "." 

for x in $(seq -20 -0.1 -30); do
	q=$(echo "-90,0,$i" | math-deg2rad --fields=a,b,c | math-eigen rotation --from=euler --to=quaternion | cut -d, -f4-)
	i=$(expr $i + 3)
	echo "$ts,$x,10,$z,$q"
done

# echo "Finished!" 

# size=$(cat $SENSOR | csv-from-bin ui,7d | wc -l)

# cat $output |
# 	math-eigen rotation --from=quaternion --to=euler --fields=,,,,w,x,y,z |
# 	csv-shuffle --fields=t,x,y,z,qx,qy,qz,qw,roll,pitch,yaw --output-fields=x,y,z,roll,pitch,yaw |
# 	# csv-play --interactive |
# 	while read frame; do
# 		cat $SENSOR | points-frame --binary=ui,7d --from=$frame --fields=,,x,y,z |
# 			points-frame --binary=ui,7d --from=$frame --fields=,,,,,x,y,z
# 	done |
# 	view-points "-;binary=ui,7d;fields=,scalar,first,second;shape=line;colour=0:15,jet;size=$size" "$output;fields=,x,y,z;colour=red;weight=10"
